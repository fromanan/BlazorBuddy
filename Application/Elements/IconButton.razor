<button class="nostyle highlight icon-button@(IconOnlyString) @(Class)" @onclick="@OnClick" disabled="@Disabled" selected="@Selected" style="@Style">
    @Body
    @BodyChildContent
</button>

@code
{
    #region Parameters

    [Parameter]
    public bool IconOnly { get; set; }
    
    [Parameter]
    public RenderFragment? ChildContent { get; set; }
    
    [Parameter]
    public string? Class { get; set; }
    
    [Parameter]
    public Action<MouseEventArgs>? ClickAction { get; set; }
    
    [Parameter]
    public Func<MouseEventArgs, Task>? ClickActionAsync { get; set; }
    
    [Parameter]
    public bool Disabled { get; set; }
    
    [Parameter]
    public bool Selected { get; set; }
    
    [Parameter]
    public string? Style { get; set; }

    #endregion

    #region Properties

    protected string IconOnlyString => IconOnly ? " icon-only" : string.Empty;

    protected string Body => IconOnly ? HtmlEntity.NON_BREAKING_SPACE.ToString() : string.Empty;

    protected RenderFragment? BodyChildContent => !IconOnly ? ChildContent : null;

    #endregion

    #region Event Handlers

    private async Task OnClick(MouseEventArgs args)
    {
        if (ClickAction is not null)
            await Task.Run(() => ClickAction(args));
        if (ClickActionAsync is not null)
            await ClickActionAsync(args);
    }

    #endregion
}